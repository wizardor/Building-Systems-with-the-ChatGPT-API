1
00:00:04,566 --> 00:00:06,966
In this video, we'll put together
everything we've learned in the

2
00:00:06,966 --> 00:00:10,666
previous videos to create an end to end
example of a customer service assistant.

3
00:00:11,000 --> 00:00:12,600
We'll go through the following steps.

4
00:00:12,600 --> 00:00:15,600
First, we'll track the input
to see if it flagged from an API.

5
00:00:16,466 --> 00:00:19,833
Second, if it does,
it will extract the list of products

6
00:00:20,266 --> 00:00:23,700
that if the products are found,
we'll try to look them up for.

7
00:00:24,366 --> 00:00:26,400
We'll answer the user question
with the model.

8
00:00:26,666 --> 00:00:30,533
And finally, we'll put the answer
through the moderation API.

9
00:00:30,766 --> 00:00:33,600
And if it is not flagged,
we'll return it to the user.

10
00:00:34,533 --> 00:00:36,633
So we have all set up.

11
00:00:36,633 --> 00:00:42,333
We have this additional imports,
this is a Python package

12
00:00:42,333 --> 00:00:45,400
we use for a chat bot UI.

13
00:00:47,033 --> 00:00:48,566
And so I'm going to paste

14
00:00:48,566 --> 00:00:52,800
in a function process user message
and I'm actually going to run

15
00:00:52,800 --> 00:00:57,733
an example for us
and then we'll talk through the function.

16
00:00:58,766 --> 00:01:01,066
So we
have our user input that we've been using.

17
00:01:01,733 --> 00:01:04,700
Tell me about the smart expression
on the camera.

18
00:01:04,800 --> 00:01:06,633
Also, tell me about TV.

19
00:01:06,633 --> 00:01:08,433
So let's run this

20
00:01:09,000 --> 00:01:09,300
first.

21
00:01:09,300 --> 00:01:11,833
Let's run this.

22
00:01:12,466 --> 00:01:15,933
So as you can see,
we're going through the steps

23
00:01:17,633 --> 00:01:20,466
to answer the user question.

24
00:01:20,466 --> 00:01:24,100
So the first stop, the motivation stop.

25
00:01:24,500 --> 00:01:26,866
The second step is extracting
the list of products.

26
00:01:27,366 --> 00:01:30,933
The third step is looking
at the product information.

27
00:01:31,666 --> 00:01:34,800
And so now with this product information,
the model is off

28
00:01:35,266 --> 00:01:37,533
is trying to answer the question.

29
00:01:39,333 --> 00:01:43,333
As we've seen in the previous videos.

30
00:01:46,200 --> 00:01:49,766
And then finally, it puts the response
through the Moderation

31
00:01:49,766 --> 00:01:53,033
API again to make sure it's safe
to show to the user.

32
00:01:53,500 --> 00:01:56,900
And so this is the response
that we're now familiar with.

33
00:01:57,933 --> 00:01:58,300
And so

34
00:01:58,300 --> 00:02:01,133
let's talk through a little bit
of what's happening.

35
00:02:01,600 --> 00:02:04,800
So we have our helper function process

36
00:02:04,800 --> 00:02:06,666
using message

37
00:02:09,133 --> 00:02:10,033
annotation.

38
00:02:10,033 --> 00:02:13,233
The user input,
which is the current message

39
00:02:13,233 --> 00:02:16,200
and an array
of all of the messages so far.

40
00:02:16,900 --> 00:02:19,166
And this is when we build the chat UI.

41
00:02:19,166 --> 00:02:23,066
So the first step checking to see
if the input flags moderation API.

42
00:02:23,100 --> 00:02:25,433
We covered this in a previous video.

43
00:02:25,433 --> 00:02:27,900
If the input is flagged, then

44
00:02:27,900 --> 00:02:31,366
we tell the user
that we can't process the request.

45
00:02:32,100 --> 00:02:35,133
If it is not flagged,
we try to extract the list of products

46
00:02:35,533 --> 00:02:37,500
as we did in the previous video.

47
00:02:37,500 --> 00:02:39,766
Then we try to look up the product.

48
00:02:40,600 --> 00:02:43,700
And in this case, if no products are
found, this will just be an empty string.

49
00:02:45,166 --> 00:02:46,966
Then we answer the user question.

50
00:02:46,966 --> 00:02:48,766
So we give the conversation history

51
00:02:48,766 --> 00:02:51,566
and the new messages
with the relevant product information.

52
00:02:51,833 --> 00:02:54,166
So we get the response

53
00:02:54,166 --> 00:02:56,600
and then we run this response
through the Moderation API.

54
00:02:58,200 --> 00:03:00,866
If it's flagged,
we tell the user that we can't

55
00:03:01,566 --> 00:03:03,900
provide this information.

56
00:03:03,900 --> 00:03:04,833
Maybe we'll say something.

57
00:03:04,833 --> 00:03:08,666
Let me connect you
and you could take some subsequent step.

58
00:03:09,300 --> 00:03:12,100
So let's put this all together with a nice

59
00:03:12,100 --> 00:03:14,966
UI and try to have a conversation.

60
00:03:15,400 --> 00:03:19,366
So here we have a function
that will just accumulate the messages

61
00:03:19,366 --> 00:03:21,666
as we interact with the assistant.

62
00:03:21,966 --> 00:03:25,533
And feel free to analyze the video, to
understand in more detail how this works.

63
00:03:26,733 --> 00:03:29,966
And of course, feel free to do the same
for the really long process.

64
00:03:29,966 --> 00:03:32,233
Use a message function
that we just saw as well.

65
00:03:33,400 --> 00:03:35,700
So now we're going to pay set our code

66
00:03:36,000 --> 00:03:39,733
to display the chat UI.

67
00:03:39,866 --> 00:03:43,233
So if we run this now,
let's try and have a conversation

68
00:03:43,633 --> 00:03:46,166
with the customer service assistant.

69
00:03:46,633 --> 00:03:49,733
So let's ask what TV is.

70
00:03:49,733 --> 00:03:52,333
Do you have?

71
00:03:54,033 --> 00:03:58,300
And under the hood, the system is going
through all of the steps in the process.

72
00:03:58,300 --> 00:04:00,466
Use message function.

73
00:04:00,700 --> 00:04:03,500
So it's listed a variety of different TVs.

74
00:04:03,833 --> 00:04:11,133
So now let's ask which is the cheapest,
I guess

75
00:04:11,166 --> 00:04:12,700
that's going through all the same steps.

76
00:04:12,700 --> 00:04:17,433
But this time it's passing
the conversation history as well into

77
00:04:18,733 --> 00:04:21,133
the prompts.

78
00:04:22,366 --> 00:04:22,666
Okay.

79
00:04:22,666 --> 00:04:26,500
So it's telling us that the speaker is
the cheapest TV related product we have.

80
00:04:27,000 --> 00:04:27,866
Interesting.

81
00:04:27,866 --> 00:04:30,633
Let's see what the most expensive is.

82
00:04:36,000 --> 00:04:39,233
So the most expensive TV is the center
view.

83
00:04:39,300 --> 00:04:40,633
Eight K TV.

84
00:04:40,633 --> 00:04:43,200
So let's ask for more information
about it.

85
00:04:43,200 --> 00:04:44,866
Tell me more about it.

86
00:04:46,400 --> 00:04:47,400
And so we've

87
00:04:47,400 --> 00:04:50,100
received some more information about

88
00:04:51,666 --> 00:04:54,366
this television.

89
00:04:54,600 --> 00:04:57,866
So in this example,
we've combined the techniques

90
00:04:57,866 --> 00:05:01,700
we've learned throughout the course
to create a comprehensive system

91
00:05:01,700 --> 00:05:05,466
with a chain of steps that evaluates user
inputs, processes them,

92
00:05:05,466 --> 00:05:07,433
and then tracks the output

93
00:05:07,433 --> 00:05:10,700
by monitoring the quality of the system
across a larger number of inputs.

94
00:05:11,066 --> 00:05:14,300
You can alter the steps and improve
the overall performance of your system.

95
00:05:15,000 --> 00:05:17,900
Maybe we might find
that our approach could be better

96
00:05:17,900 --> 00:05:20,800
because some of the steps, maybe
some of the steps aren't even necessary.

97
00:05:21,100 --> 00:05:24,300
Maybe we'll find a better retrieval method
and so on.

98
00:05:24,833 --> 00:05:26,466
We'll discuss this more in the next video.
