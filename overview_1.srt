1
00:00:00,033 --> 00:00:04,371
Welcome to this course on building systems
using the chat API

2
00:00:04,871 --> 00:00:09,976
previously easier and I presented
the course on how to prompt charge API,

3
00:00:09,976 --> 00:00:12,712
but the system requires
much more than a single prompt

4
00:00:12,712 --> 00:00:15,548
or a single call to an animal
large language model.

5
00:00:16,182 --> 00:00:19,419
In this short course, we'd like to share
with you best practices

6
00:00:19,419 --> 00:00:22,689
for building a complex application
using an 11.

7
00:00:23,690 --> 00:00:26,993
We use the running example of building
an end to end customer service

8
00:00:26,993 --> 00:00:30,196
assistant system that chains
multiple calls to a language model

9
00:00:30,397 --> 00:00:33,633
using different instructions depending
on the output of the previous call,

10
00:00:33,833 --> 00:00:36,536
and sometimes even looking things up
from external sources.

11
00:00:36,936 --> 00:00:41,408
So, for example, giving a user input like
tell me about what TVs are for sale.

12
00:00:42,042 --> 00:00:44,411
We'd use the following steps
to process this.

13
00:00:44,944 --> 00:00:47,414
First, you can evaluate the input
to make sure it doesn't

14
00:00:47,414 --> 00:00:51,151
contain any problematic content
such as hateful speech.

15
00:00:52,318 --> 00:00:54,354
Next, the system will process the input.

16
00:00:54,721 --> 00:00:56,890
It will identify
what type of query this is.

17
00:00:57,057 --> 00:01:00,260
Is it complaints or product
information request and so on.

18
00:01:00,427 --> 00:01:02,762
Once it has established
that it is a product inquiry,

19
00:01:03,363 --> 00:01:05,765
it will retrieve the relevant information
about TVs

20
00:01:06,032 --> 00:01:09,302
and use a language model
to write a helpful response.

21
00:01:09,302 --> 00:01:12,205
Finally, you'll check the output
to make sure it isn't problematic,

22
00:01:12,338 --> 00:01:15,375
such as inaccurate
or inappropriate answers.

23
00:01:15,475 --> 00:01:18,645
One theme you see throughout this
course is an application.

24
00:01:18,645 --> 00:01:22,816
Often these multiple internal steps,
they're invisible to the end user.

25
00:01:23,283 --> 00:01:27,387
You often want to sequentially process
user inputs in multiple steps

26
00:01:27,387 --> 00:01:30,690
to get to the final output
that is then shown to the user.

27
00:01:31,491 --> 00:01:34,861
And as you've built
complex systems using labs

28
00:01:35,128 --> 00:01:39,132
over the long term, you often
want to also keep on improving the system.

29
00:01:39,532 --> 00:01:43,103
So also share of you
what the process of developing an ARM

30
00:01:43,103 --> 00:01:44,471
based application feels like

31
00:01:44,471 --> 00:01:49,142
and some best practices for evaluating
and improving the system over time.

32
00:01:49,609 --> 00:01:52,479
We're grateful to many people
that had contributed

33
00:01:52,479 --> 00:01:55,515
to this short course on the open air site.

34
00:01:55,682 --> 00:02:01,521
We're grateful to Andrew KONDRACKE,
Joe Palermo, Boris Power and Ted Sanders,

35
00:02:01,955 --> 00:02:05,992
and from the Deep Learning Team,
thank you also to Jeff

36
00:02:05,992 --> 00:02:08,628
Lodwick at issue and Tommy Nelson.

37
00:02:09,295 --> 00:02:11,097
Through this short course,
we hope you'll come away

38
00:02:11,097 --> 00:02:14,601
confident in your abilities
to build a complex multistep application

39
00:02:14,701 --> 00:02:17,537
and also be set up to maintain
and keep on improving it.

40
00:02:18,104 --> 00:02:18,838
Let's dive in.
